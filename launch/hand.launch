<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="True"/>
  <arg name="headless" default="False"/>
  <arg name="debug" default="false"/>
  <arg name="gripper" default="hand_T42"/> 
  <arg name="fingers3" default="false"/>
  <!-- <arg name="world" default="$(find hand_simulator)/worlds/hand.world"/> -->

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find hand_simulator)/worlds/handw.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro.py $(find hand_simulator)/urdf/$(arg gripper).xacro" />

  <rosparam command="load" file="$(find hand_simulator)/config/gazebo_position_control.yaml" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 0.0 -unpause -urdf -model hand -param robot_description" respawn="false" output="screen" />

  <!-- <node name="spawn_table" pkg="gazebo_ros" type="spawn_model" args="-file $(find hand_simulator)/urdf/table.urdf -urdf -x 0 -z 0 -model table" /> -->

  <node name="spawn_object" pkg="gazebo_ros" type="spawn_model" args="-file $(find hand_simulator)/urdf/object.urdf -urdf -x 0.195 -z 0.6 -model object" />

    <node name="spawn_box" pkg="gazebo_ros" type="spawn_model" args="-file $(find hand_simulator)/urdf/box.urdf -urdf -x 0.0 -z 0.38 -model box" />

  <!-- Load custom joint_state_publisher and object_state_publisher -->
  <node pkg="hand_simulator" type="my_joint_state_publisher.py" name="my_joint_state_publisher" output="screen">
    <rosparam command="load" file="$(find hand_simulator)/param/gripper.yaml" />  
  </node>
  <node pkg="hand_simulator" type="object_state_publisher.py" name="object_state_publisher" output="screen"></node>

  <include file="$(find hand_simulator)/launch/hand_control.launch">
    <arg name="model3" value="$(arg fingers3)" />
  </include>


</launch>

